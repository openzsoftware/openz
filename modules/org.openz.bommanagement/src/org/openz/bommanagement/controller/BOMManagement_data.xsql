<SqlClass name="BOMManagementData" package="org.openz.bommanagement.controller">
  <SqlClassComment></SqlClassComment>
   <SqlMethod name="select" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
    select '' as dummy
    </Sql>
    
  </SqlMethod>
  <SqlMethod name="insertMaterialLine" type="preparedStatement" return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
       insert into M_INTERNAL_CONSUMPTIONLINE(M_INTERNAL_CONSUMPTIONLINE_ID, AD_CLIENT_ID, AD_ORG_ID, CREATED, CREATEDBY, UPDATED, UPDATEDBY, M_INTERNAL_CONSUMPTION_ID, 
                                                  M_LOCATOR_ID, M_PRODUCT_ID, LINE, MOVEMENTQTY, DESCRIPTION, C_UOM_ID, C_PROJECT_ID, C_PROJECTTASK_ID,snr_masterdata_id,text1,text2)
                  values (?,?,?,NOW(), ?, NOW(),?,?,
                          ?,?,to_number(?),to_number(?),'Generated by PDC/BOM',?,?, ?,?,?,?);
      ]]>
    </Sql>
    <Parameter name="consumptionLineId"/>
    <Parameter name="adClientId"/>
    <Parameter name="adOrgId"/>
    <Parameter name="user"/>
    <Parameter name="user"/>
    <Parameter name="consumptionId"/>
    <Parameter name="locatorId"/>
    <Parameter name="productId"/>
    <Parameter name="line"/>
    <Parameter name="qty"/>
    <Parameter name="uomId"/>
    <Parameter name="cProjectId"/>
    <Parameter name="cProjecttaskId"/>
    <Parameter name="snrMasterdataId"/>
    <Parameter name="text1"/>
    <Parameter name="text2"/>
  </SqlMethod>
   <SqlMethod name="insertSerialLine" type="preparedStatement"  return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
       insert into snr_internal_consumptionline(snr_internal_consumptionline_ID, AD_CLIENT_ID, AD_ORG_ID, CREATED, CREATEDBY, UPDATED, UPDATEDBY, M_INTERNAL_CONSUMPTIONLINE_ID, 
                                                  quantity,lotnumber,serialnumber)
                  values (get_uuid(),?,?,NOW(), ?, NOW(),?,?,
                          to_number(?),?, ?);
      ]]>
    </Sql>
    <Parameter name="adClientId"/>
    <Parameter name="adOrgId"/>
    <Parameter name="user"/>
    <Parameter name="user"/>
    <Parameter name="consumptionLineId"/>
    <Parameter name="qty"/>
    <Parameter name="batchno"/>
    <Parameter name="serialno"/>
  </SqlMethod>
  <SqlMethod name="getSNRfromMaster" type="preparedStatement" return="string">
      <Sql>
        SELECT  serialnumber from snr_masterdata where snr_masterdata_id=?
      </Sql>
      <Parameter name="masterdataId"/>
   </SqlMethod>
   <SqlMethod name="isAssembly" type="preparedStatement" return="string">
      <Sql>
        SELECT  case when typeofproduct in ('AS','CD') then 'Y' else 'N' end as result from m_product where m_product_id=?
      </Sql>
      <Parameter name="productId"/>
   </SqlMethod>
   <SqlMethod name="getBATCHfromMaster" type="preparedStatement" return="string">
      <Sql>
        SELECT  batchnumber from snr_batchmasterdata where snr_batchmasterdata_id=?
      </Sql>
      <Parameter name="masterdataId"/>
   </SqlMethod>
  <SqlMethod name="getIDWhenScannedSameLinewSNR" type="preparedStatement" return="string">
      <Sql>
        SELECT  l.M_INTERNAL_CONSUMPTIONLINE_ID from M_INTERNAL_CONSUMPTIONLINE l,m_product p 
        where p.m_product_id=l.m_product_id and l.M_INTERNAL_CONSUMPTION_ID=? and l.m_product_id = ? and l.m_locator_id=?
        and case when p.isserialtracking='Y' then exists (select 0 from snr_internal_consumptionline sl where l.M_INTERNAL_CONSUMPTIONLINE_id=sl.M_INTERNAL_CONSUMPTIONLINE_id and sl.serialnumber=?) else 1=1 end
        and  case when p.isbatchtracking='Y' then exists (select 0 from snr_internal_consumptionline sl where l.M_INTERNAL_CONSUMPTIONLINE_id=sl.M_INTERNAL_CONSUMPTIONLINE_id and sl.lotnumber=?) else 1=1 end
      </Sql>
      <Parameter name="mConsumptionId"/>
      <Parameter name="mProductId"/>
      <Parameter name="mLocatorId"/>
      <Parameter name="serialno"/>
      <Parameter name="batchno"/>
   </SqlMethod>
   
  </SqlClass>
