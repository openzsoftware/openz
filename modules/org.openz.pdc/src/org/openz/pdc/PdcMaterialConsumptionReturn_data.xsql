<?xml version="1.0" encoding="UTF-8" ?>
<!--
/***************************************************************************************************************************************************
The contents of this file are subject to the Mozilla Public License Version 1.1 (the "License"); you may not use this file except in
compliance with the License. You may obtain a copy of the License at http://www.mozilla.org/MPL/MPL-1.1.html
Software distributed under the License is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
License for the specific language governing rights and limitations under the License.
The Original Code is OpenZ. The Initial Developer of the Original Code is OpenZ Software GmbH
Copyright (C) 2020 OpenZ Software GmbH All Rights Reserved.
Contributor(s): ______________________________________.
***************************************************************************************************************************************************
-->

<SqlClass name="PdcMaterialConsumptionReturnData" package="org.openz.pdc" accessModifier="public">
<SqlClassComment></SqlClassComment>
<!-- MUUH -->
-- Test
/* TEST */
<SqlMethod name="initialize" type="preparedStatement" return="multiple">
<SqlMethodComment></SqlMethodComment>
	<Sql>
		select 
			-- selectupper
			'' as pdcmaterialconsumptionproduct,
			'' as pdcmaterialconsumptionlocator,
			'' as pdcmaterialconsumptionplannedqty,
			'' as pdcmaterialconsumptionreceivedqty, 
			'' as pdcmaterialconsumptionavailableqty,
			'' as pdc_workstepbom_v_id,
			-- selectlower              
			'' as m_internal_consumptionline_id,
			-- selectbarcode
			'' as barcode,
			'' as type,
			'' as id,
			'' as mess,
			'' as ad_message_value,
            '' as serialnumber,
            '' as lotnumber,
            '' as m_product_id,
            '' as m_locator_id,
            '' as line
	</Sql>
</SqlMethod>
  
<SqlMethod name="selectlower" type="preparedStatement" return="multiple">
<SqlMethodComment></SqlMethodComment>
    <Sql>
         Select f.m_internal_consumptionline_id,zssi_getproductnamewithvalue(f.m_product_id,?) AS pdcmaterialconsumptionproduct,
         l.value as pdcmaterialconsumptionlocator,zssi_strNumber(f.movementqty,?) as pdcmaterialconsumptionreceivedqty,
         snr.serialnumber,snr.lotnumber
           from m_product p,m_internal_consumptionline f left join  m_locator l on  f.m_locator_id=l.m_locator_id
                                             left join snr_internal_consumptionline snr on f.m_internal_consumptionline_id=snr.m_internal_consumptionline_id
           where f.m_internal_consumption_id=?
           and p.m_product_id=f.m_product_id order by p.value
    </Sql>
    <Parameter name = "language"/>
    <Parameter name = "language"/>
    <Parameter name = "consumptionid"/>
</SqlMethod>

<SqlMethod name="countlower" type="preparedStatement" return="String">
<SqlMethodComment></SqlMethodComment>
    <Sql>
        select count(*)
           from m_internal_consumptionline f left join  m_locator l on  f.m_locator_id=l.m_locator_id
                                             left join snr_internal_consumptionline snr on f.m_internal_consumptionline_id=snr.m_internal_consumptionline_id
           where f.m_internal_consumption_id=?
    </Sql>
    <Parameter name = "consumptionid"/>
</SqlMethod>

<SqlMethod name="insertConsumption" type="preparedStatement"  return="rowCount">
<SqlMethodComment>Initializes a  Transaction</SqlMethodComment>
    <Sql>
        insert into M_INTERNAL_CONSUMPTION(
            M_INTERNAL_CONSUMPTION_ID,
            AD_CLIENT_ID,
            AD_ORG_ID,
            CREATED,
            CREATEDBY,
            UPDATED,
            UPDATEDBY,
            NAME,
            DESCRIPTION,
            MOVEMENTDATE, 
            C_PROJECT_ID,
            C_PROJECTTASK_ID,
            MOVEMENTTYPE,
            DOCUMENTNO,
            DATEACCT)
        values(
            ?,
            ?,
            ?,
            NOW(),
            ?,
            NOW(),
            ?,
            'Internal Consumption - Generated by PDC',
            ?,
            now(),
            ?,
            ?,
            ?,
            ad_sequence_doc('Production',?,'Y'),
            trunc(now()))
    </Sql>
	<Parameter name="uuId"/>
	<Parameter name="adClientId"/>
	<Parameter name="adOrgId"/>
	<Parameter name="user"/>
	<Parameter name="user"/>
	<Parameter name="description"/>
	<Parameter name="cProjectId"/>
	<Parameter name="cProjecttaskId"/>
	<Parameter name="direction"/>
	<Parameter name="adOrgId"/>
</SqlMethod>

<SqlMethod name="updateConsumption" type="preparedStatement"  return="rowCount">
<SqlMethodComment>Initializes a  Transaction</SqlMethodComment>
    <Sql>
       update M_INTERNAL_CONSUMPTION set description=? where M_INTERNAL_CONSUMPTION_id=?
    </Sql>
	<Parameter name="descittion"/>
	<Parameter name="mInternalConsId"/>
</SqlMethod>

<SqlMethod name="copyConsumption2Return" type="preparedStatement"  return="String">
<SqlMethodComment>Initializes Relocation  Transaction</SqlMethodComment>
    <Sql>
       select m_createReturnFromInternalConsumption(?,?,?) from dual
    </Sql>
	<Parameter name="consumptionId"/>
	<Parameter name="locatorId"/>
	<Parameter name="userId"/>
</SqlMethod>


 <SqlMethod name="insertMaterialLine" type="preparedStatement"  return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
       insert into M_INTERNAL_CONSUMPTIONLINE(M_INTERNAL_CONSUMPTIONLINE_ID, AD_CLIENT_ID, AD_ORG_ID, CREATED, CREATEDBY, UPDATED, UPDATEDBY, M_INTERNAL_CONSUMPTION_ID, 
                                                  M_LOCATOR_ID, M_PRODUCT_ID, LINE, MOVEMENTQTY, DESCRIPTION, C_UOM_ID, C_PROJECT_ID, C_PROJECTTASK_ID,weight)
                  values (?,?,?,NOW(), ?, NOW(),?,?,
                          ?,?,to_number(?),to_number(?),'Generated by PDC',?,?, ?,to_number(?));
      ]]>
    </Sql>
    <Parameter name="uuID"/>
    <Parameter name="adClientId"/>
    <Parameter name="adOrgId"/>
    <Parameter name="user"/>
    <Parameter name="user"/>
    <Parameter name="consumptionId"/>
    <Parameter name="locatorId"/>
    <Parameter name="productId"/>
    <Parameter name="line"/>
    <Parameter name="qty"/>
    <Parameter name="uomId"/>
    <Parameter name="cProjectId"/>
    <Parameter name="cProjecttaskId"/>
    <Parameter name="mWeight"/>
  </SqlMethod>
  
    <SqlMethod name="insertSerialLine" type="preparedStatement"   return="rowCount">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
       insert into snr_internal_consumptionline(snr_internal_consumptionline_ID, AD_CLIENT_ID, AD_ORG_ID, CREATED, CREATEDBY, UPDATED, UPDATEDBY, M_INTERNAL_CONSUMPTIONLINE_ID, 
                                                  quantity,lotnumber,serialnumber)
                  values (get_uuid(),?,?,NOW(), ?, NOW(),?,?,
                          to_number(?),?, ?);
      ]]>
    </Sql>
    <Parameter name="adClientId"/>
    <Parameter name="adOrgId"/>
    <Parameter name="user"/>
    <Parameter name="user"/>
    <Parameter name="consumptionLineId"/>
    <Parameter name="qty"/>
    <Parameter name="batchno"/>
    <Parameter name="serialno"/>
  </SqlMethod>
 
</SqlClass>
