<?xml version="1.0" encoding="UTF-8" ?>
<!--
 ************************************************************************************
 * Copyright (C) 2001-2009 Openbravo S.L.
 * Licensed under the Apache Software License version 2.0
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to  in writing,  software  distributed
 * under the License is distributed  on  an  "AS IS"  BASIS,  WITHOUT  WARRANTIES  OR
 * CONDITIONS OF ANY KIND, either  express  or  implied.  See  the  License  for  the
 * specific language governing permissions and limitations under the License.
 ************************************************************************************
-->



<SqlClass name="SeguridadData" package="org.openbravo.base.secureApp">
   <SqlClassComment></SqlClassComment>
   <SqlMethod name="select" type="preparedStatement" return="multiple">
      <SqlMethodComment></SqlMethodComment>
      <Sql><![CDATA[
        SELECT r.UserLevel,''''||replace(replace(r.ClientList,' ',''),',',''',''')||'''' as ClientList,''''||replace(replace(r.OrgList,' ',''),',',''',''')||'''' as OrgList,r.C_Currency_ID,r.AmtApproval, 
        r.AD_Client_ID, c.NAME, u.C_BPARTNER_ID, c.VALUE, c.SMTPHOST 
        FROM AD_ROLE r, AD_CLIENT c, AD_USER u, 
        AD_USER_ROLES ur 
        WHERE r.AD_Role_ID = ? 
        AND ur.AD_USER_ID = ? 
        AND r.AD_CLIENT_ID = c.AD_CLIENT_ID
        AND r.IsActive='Y' AND c.IsActive='Y' 
        AND r.AD_ROLE_ID = ur.AD_ROLE_ID 
        AND ur.AD_USER_ID = u.AD_USER_ID
      ]]></Sql>
      <Parameter name="adRoleId"/>
      <Parameter name="adUserId"/>
   </SqlMethod>
   <SqlMethod name="valido" type="preparedStatement" return="String" default="-1">
      <SqlMethodComment></SqlMethodComment>
      <Sql>
        SELECT AD_USER_ID 
        FROM AD_USER 
        WHERE ISACTIVE = 'Y' 
        AND USERNAME = ? 
        AND PASSWORD = ?
      </Sql>
      <Parameter name="user"/>
      <Parameter name="passwd"/>
   </SqlMethod>
   <SqlMethod name="loggedOK" type="preparedStatement" return="boolean">
      <SqlMethodComment></SqlMethodComment>
      <Sql>
        SELECT COUNT(*) AS TOTAL 
          FROM AD_SESSION WHERE AD_SESSION_ID = ? 
            AND ISACTIVE = 'Y' 
      </Sql>
      <Parameter name="adSessionId"/>
   </SqlMethod>

   <SqlMethod name="isUserRole" type="preparedStatement" return="Boolean" default="false">
      <SqlMethodComment></SqlMethodComment>
      <Sql>
        SELECT COUNT(*) AS TOTAL 
        FROM AD_USER_ROLES A_U_R 
        WHERE A_U_R.ISACTIVE = 'Y' 
        AND A_U_R.AD_USER_ID = ?
        AND A_U_R.AD_ROLE_ID = ?
      </Sql>
        <Parameter name="user"/>
        <Parameter name="role"/>
   </SqlMethod>

   <SqlMethod name="isRoleClient" type="preparedStatement" return="Boolean" default="false">
      <SqlMethodComment></SqlMethodComment>
      <Sql>
        SELECT COUNT(*) AS TOTAL
        FROM AD_CLIENT A_C
        WHERE A_C.AD_CLIENT_ID IN (SELECT CLIENTLIST FROM AD_ROLE WHERE AD_ROLE_ID = ?) 
        AND A_C.AD_CLIENT_ID = ?
      </Sql>
        <Parameter name="rol"/>
        <Parameter name="client"/>
   </SqlMethod>

   <SqlMethod name="isLoginRoleOrg" type="preparedStatement" return="Boolean" default="false">
      <SqlMethodComment></SqlMethodComment>
      <Sql><![CDATA[
        SELECT COUNT(*) AS TOTAL 
        FROM AD_ROLE_ORGACCESS A_R_O, AD_ROLE R 
        WHERE A_R_O.ISACTIVE = 'Y' 
        AND A_R_O.AD_ROLE_ID = R.AD_ROLE_ID 
        AND R.ISACTIVE = 'Y' 
        AND A_R_O.AD_ROLE_ID = ? 
        AND A_R_O.AD_ORG_ID = ?
      ]]></Sql>
        <Parameter name="rol"/>
        <Parameter name="org"/>
   </SqlMethod>

   <SqlMethod name="saveProcessed" type="preparedStatement" return="rowCount">
      <SqlMethodComment></SqlMethodComment>
      <Sql>
        UPDATE AD_SESSION SET UPDATED = now(), UPDATEDBY = ?, 
        PROCESSED = 'Y' 
        WHERE AD_SESSION_ID = ?
      </Sql>
      <Parameter name="adUserId"/>
      <Parameter name="adSessionId"/>
   </SqlMethod>

   <SqlMethod name="selectAccessLevel" type="preparedStatement" return="string">
      <SqlMethodComment></SqlMethodComment>
      <Sql><![CDATA[
        SELECT ACCESSLEVEL
          FROM AD_FORM
         WHERE TO_CHAR('X') = ? 
           AND AD_FORM_ID = ?
         UNION 
         SELECT ACCESSLEVEL
          FROM AD_PROCESS 
         WHERE (TO_CHAR('P') = ? OR TO_CHAR('R') = ?)
           AND AD_PROCESS_ID = ?
         UNION
         SELECT T.ACCESSLEVEL
          FROM AD_TABLE T, 
               AD_TAB TB
         WHERE T.AD_TABLE_ID = TB.AD_TABLE_ID
           AND TO_CHAR('W') = ?
           AND TB.AD_TAB_ID = ?
         UNION
         SELECT ACCESSLEVEL
          FROM AD_TASK
         WHERE TO_CHAR('T') = ? 
           AND AD_TASK_ID = ?
         UNION
        SELECT ACCESSLEVEL
          FROM AD_WORKFLOW
         WHERE TO_CHAR('F') = ? 
           AND AD_WORKFLOW_ID = ?
      ]]></Sql>
      <Parameter name="type"/>
      <Parameter name="id"/>
      
      <Parameter name="type"/>
      <Parameter name="type"/>
      <Parameter name="id"/>
      
      <Parameter name="type"/>
      <Parameter name="id"/>
      
      <Parameter name="type"/>
      <Parameter name="id"/>
      
      <Parameter name="type"/>
      <Parameter name="id"/>
   </SqlMethod>
   
  <SqlMethod name="selectAccess" type="preparedStatement" return="string">
      <SqlMethodComment></SqlMethodComment>
      <Sql><![CDATA[
       SELECT SUM(TOTAL) AS TOTAL
         FROM (SELECT COUNT(*) AS TOTAL 
                FROM AD_Process_Access 
               WHERE AD_Role_ID = ? 
                 AND (TO_CHAR('P') = ? OR TO_CHAR('R') = ?)
                 AND AD_Process_ID = ? 
                 AND IsActive = 'Y'
               UNION
              SELECT COUNT(*) AS TOTAL 
                FROM AD_Form_Access 
               WHERE AD_Role_ID = ?
                 AND TO_CHAR('X') = ? 
                 AND AD_Form_ID = ? 
                 AND IsActive = 'Y'
               UNION
               SELECT COUNT(*) AS TOTAL 
                FROM DUAL 
                WHERE (to_char('800017') = ? 
                   OR to_char('800018') = ?) 
                   AND TO_CHAR('TABLE') <> TO_CHAR(?)
               UNION
               SELECT COUNT(*) AS TOTAL 
                 FROM AD_Window_Access 
                WHERE AD_Role_ID = ? 
                  AND TO_CHAR('W') = ?
                  AND AD_Window_ID = (SELECT AD_WINDOW_ID
                                        FROM AD_TAB
                                       WHERE AD_TAB_ID = ?) 
                  AND IsActive = 'Y'
                UNION
               SELECT COUNT(*) AS TOTAL 
                 FROM AD_Table_Access t, AD_Tab tb
                WHERE t.AD_Table_ID = tb.AD_Table_ID 
                 AND t.AD_Role_ID = ? 
                 AND TO_CHAR('TABLE') = ? 
                 AND tb.AD_Tab_ID = ? 
                 AND t.IsActive = 'Y' 
                 AND t.IsExclude = 'Y'
               UNION
              SELECT COUNT(*) AS TOTAL 
                FROM AD_Task_Access 
               WHERE AD_Role_ID = ? 
                 AND TO_CHAR('T') = ?
                 AND AD_Task_ID = ? 
                 AND IsActive = 'Y' 
               UNION
              SELECT COUNT(*) AS TOTAL 
                FROM AD_Workflow_Access 
               WHERE AD_Role_ID = ?
                 AND TO_CHAR('F') = ? 
                 AND AD_Workflow_ID = ? 
                 AND IsActive = 'Y'
                 UNION
               SELECT COUNT(*) AS TOTAL 
                FROM AD_Process_Access A,
                     AD_Process P
               WHERE AD_Role_ID = ? 
                 AND TO_CHAR('P') = TO_CHAR(?)
                 AND A.AD_Process_ID = ?
                 AND P.AD_Process_ID = A.AD_Process_ID
                 AND A.IsActive = 'Y'
                 AND P.IsExternalService = 'Y' 
                   UNION
               SELECT 1 AS TOTAL
                FROM AD_Process
                WHERE  TO_CHAR('P') = TO_CHAR(?)
                AND AD_Process_ID = ? 
                 AND IsActive = 'Y'
                 AND IsExternalService != 'Y') TOTAL
       
      ]]></Sql>
      <Parameter name="role"/>
      <Parameter name="type"/>
      <Parameter name="type"/>
      <Parameter name="id"/>
      
      <Parameter name="role"/>
      <Parameter name="type"/>
      <Parameter name="id"/>
      
      <Parameter name="id"/>
      <Parameter name="id"/>
      <Parameter name="type"/>
      
      <Parameter name="role"/>
      <Parameter name="type"/>
      <Parameter name="id"/>
      
      <Parameter name="role"/>
      <Parameter name="type"/>
      <Parameter name="id"/>
      
      <Parameter name="role"/>
      <Parameter name="type"/>
      <Parameter name="id"/>
      
      <Parameter name="role"/>
      <Parameter name="type"/>
      <Parameter name="id"/>
      
      <Parameter name="role"/>
      <Parameter name="type"/>
      <Parameter name="id"/>
      
      <Parameter name="type"/>
      <Parameter name="id"/>
   </SqlMethod>
   
   <SqlMethod name="selectAccessSearch" type="preparedStatement" return="string">
     <Sql><![CDATA[
          select count(*) AS TOTAL
            from ad_column c,
                 ad_field f,
                 ad_tab tb,
                 ad_table t,
                 ad_window_access wa,
                 ad_window w,
                 ad_role r
           where r.ad_role_ID = ?
             and ad_reference_value_ID = ?
             and ad_reference_id = '30'
             and f.ad_column_id = c.ad_column_id
             and tb.ad_tab_id  = f.ad_tab_id
             and tb.ad_window_id = wa.ad_window_id
             and tb.ad_window_id = w.ad_window_id
             and wa.ad_role_id = r.ad_role_id
             and wa.isactive = 'Y'
             and w.isactive='Y'
             and t.isActive='Y'
             and tb.isActive='Y'
             and tb.ad_table_id = t.ad_table_id
             and ( (TO_NUMBER(t.accessLevel)=4 and instr(r.userLevel,'S')!=0)
                or (TO_NUMBER(t.accessLevel)=1 and instr(r.userLevel,'O')!=0)
                or (TO_NUMBER(t.accessLevel)=3 and not (instr(r.userLevel,'C')=0 or instr(r.userLevel,'O')=0))
                or (TO_NUMBER(t.accessLevel)=6 and not (instr(r.userLevel,'S')=0 or instr(r.userLevel,'C')=0))
                )
             and not exists (select 1
                              from ad_table_access ta
                             where t.ad_table_id = ta.ad_table_id
                               and ta.ad_role_id = r.ad_role_id
                               and ta.isActive='Y'
                               and ta.isExclude = 'N')
     ]]></Sql>
     <Parameter name="role"/>
     <Parameter name="id"/>
   </SqlMethod>
   
   <SqlMethod name="hasSystemRole" type="preparedStatement" return="boolean">
     <Sql><![CDATA[
          select count(*) AS TOTAL
           FROM AD_USER U, AD_USER_ROLES UR, AD_ROLE R
          WHERE U.AD_USER_ID = UR.AD_USER_ID
            AND UR.AD_ROLE_ID = R.AD_ROLE_ID
            AND R.USERLEVEL='S'
            AND U.AD_USER_ID=?
     ]]></Sql>
     <Parameter name="user"/>
   </SqlMethod>
   <SqlMethod name="checkBanSecure" type="preparedStatement" return="string">
        <Sql><![CDATA[
            SELECT zsse_checkbansecure(?)
              FROM DUAL
        ]]></Sql>
        <Parameter name="adUserId"/>
   </SqlMethod>
   <SqlMethod name="recordFailedLogin" type="preparedStatement" return="string">
        <Sql><![CDATA[
            SELECT zsse_failedlogin(?)
              FROM DUAL
        ]]></Sql>
        <Parameter name="adUserId"/>
   </SqlMethod>
   <SqlMethod name="getuserID" type="preparedStatement" return="String" default="-1">
      <SqlMethodComment></SqlMethodComment>
      <Sql>
        SELECT AD_USER_ID 
        FROM AD_USER 
        WHERE  USERNAME = ? 
      </Sql>
      <Parameter name="user"/>
   </SqlMethod>
    <SqlMethod name="hasRoleTabAccessReadonly" type="preparedStatement" return="boolean">
     <Sql><![CDATA[
          select count(*) AS TOTAL
           FROM ad_role_tabaccess
           WHERE ad_role_id= ? and ad_tab_id = ?
           and (editsetting='READONLY' or visiblesetting = 'HIDDEN')
     ]]></Sql>
     <Parameter name="roleId"/>
     <Parameter name="tabId"/>
   </SqlMethod>
</SqlClass>
