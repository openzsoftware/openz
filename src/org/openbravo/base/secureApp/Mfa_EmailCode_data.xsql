<?xml version="1.0" encoding="UTF-8" ?>
<!--
 ************************************************************************************
 * Copyright (C) 2001-2006 Openbravo S.L.
 * Licensed under the Apache Software License version 2.0
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to  in writing,  software  distributed
 * under the License is distributed  on  an  "AS IS"  BASIS,  WITHOUT  WARRANTIES  OR
 * CONDITIONS OF ANY KIND, either  express  or  implied.  See  the  License  for  the
 * specific language governing permissions and limitations under the License.
 ************************************************************************************
-->



<SqlClass name="MfaEmailCodeData" package="org.openbravo.base.secureApp" accessModifier="public">
   <SqlClassComment></SqlClassComment>

   <SqlMethod name="setCookie" type="preparedStatement" return="rowcount">
     <SqlMethodComment></SqlMethodComment>
     <Sql><![CDATA[
       insert into ad_user_mfa_cookies(ad_user_mfa_cookies_id, cookie_hash, expires, ad_client_id, ad_org_id, createdby, updatedby, ad_user_id) values(?,?,(now()+ cast(? as int) * interval '1 seconds'),?,?,?,?,?);
     ]]></Sql>
     <Parameter name="cookieId"/>
     <Parameter name="cookieHash"/>
     <Parameter name="expires"/>
     <Parameter name="adClientId"/>
     <Parameter name="adOrgId"/>
     <Parameter name="createdBy"/>
     <Parameter name="updatedBy"/>
     <Parameter name="adUserId"/>
   </SqlMethod>

   <SqlMethod name="validateCookie" type="preparedStatement" return="Boolean" default="false">
     <SqlMethodComment></SqlMethodComment>
     <Sql><![CDATA[
       select count(*) as total from ad_user_mfa_cookies where cookie_hash = ? and expires >= now() and ad_user_id = ?;
     ]]></Sql>
     <Parameter name="cookieId"/>
     <Parameter name="adUserId"/>
   </SqlMethod>
   
   <SqlMethod name="resetMFACode" type="preparedStatement" return="rowcount">
     <SqlMethodComment></SqlMethodComment>
     <Sql><![CDATA[
       update ad_user set mfa_code = null, mfa_code_timestamp = null, updated = now(), updatedby = ? where ad_user_id = ?;
     ]]></Sql>
     <Parameter name="updatedBy"/>
     <Parameter name="adUserId"/>
   </SqlMethod>

   <SqlMethod name="getCookieLifetime" type="preparedStatement" return="String" default ="30">
     <SqlMethodComment></SqlMethodComment>
     <Sql><![CDATA[
         SELECT COALESCE((SELECT mfacookieduration FROM c_orgconfiguration WHERE isactive = 'Y' and ad_org_id = ? limit 1),
                         (SELECT mfacookieduration FROM c_orgconfiguration WHERE isactive = 'Y' and isstandard = 'Y' limit 1)) FROM dual;
     ]]></Sql>
     <Parameter name="adOrgId"/>
   </SqlMethod>

   <SqlMethod name="getKeepMeLoggedInCookieLifetime" type="preparedStatement" return="String" default ="7">
     <SqlMethodComment></SqlMethodComment>
     <Sql><![CDATA[
         SELECT COALESCE((SELECT keeploggedincookieduration FROM c_orgconfiguration WHERE isactive = 'Y' and ad_org_id = ? limit 1),
                         (SELECT keeploggedincookieduration FROM c_orgconfiguration WHERE isactive = 'Y' and isstandard = 'Y' limit 1)) FROM dual;
     ]]></Sql>
     <Parameter name="adOrgId"/>
   </SqlMethod>

  <SqlMethod name="getMfaCode" type="preparedStatement" return="String" default="expired">
    <SqlMethodComment>mfa code only valid for 15 minutes</SqlMethodComment>
    <Sql><![CDATA[
      select mfa_code from ad_user where ad_user_id = ? and mfa_code_timestamp + interval '15 minutes' > now();
    ]]></Sql>
    <Parameter name="adUserId"/>
   </SqlMethod>

   <SqlMethod name="isSendingAllowed" type="preparedStatement" return="String">
    <SqlMethodComment></SqlMethodComment>
    <Sql><![CDATA[
      select (mfa_code_timestamp is null or mfa_code_timestamp + interval '1 minute' < now()) as result from ad_user where ad_user_id = ?;
    ]]></Sql>
    <Parameter name="adUserId"/>
   </SqlMethod>
   
   <SqlMethod name="getReceiverEmail" type="preparedStatement" return="String">
    <SqlMethodComment></SqlMethodComment>
    <Sql><![CDATA[
      select email from ad_user where ad_user_id = ?;
    ]]></Sql>
    <Parameter name="adUserId"/>
   </SqlMethod>
   
   <SqlMethod name="getSenderEmail" type="preparedStatement" return="String">
    <SqlMethodComment></SqlMethodComment>
    <Sql><![CDATA[
      select requestemail from ad_client where ad_client_id = ?;
    ]]></Sql>
    <Parameter name="adClientId"/>
   </SqlMethod>
   
   <SqlMethod name="setVerificationCode" type="preparedStatement" return="rowcount">
    <SqlMethodComment></SqlMethodComment>
    <Sql><![CDATA[
      update ad_user set mfa_code = ?, mfa_code_timestamp = now(), updated = now(), updatedby = ? where ad_user_id = ?;
    ]]></Sql>
    <Parameter name="verificationCode"/>
    <Parameter name="updatedBy"/>
    <Parameter name="adUserId"/>
   </SqlMethod>
</SqlClass>
