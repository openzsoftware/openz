<?xml version="1.0" encoding="UTF-8" ?>
<!--
 ************************************************************************************
 * Copyright (C) 2001-2006 Openbravo S.L.
 * Licensed under the Apache Software License version 2.0
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to  in writing,  software  distributed
 * under the License is distributed  on  an  "AS IS"  BASIS,  WITHOUT  WARRANTIES  OR
 * CONDITIONS OF ANY KIND, either  express  or  implied.  See  the  License  for  the
 * specific language governing permissions and limitations under the License.
 ************************************************************************************
-->



<SqlClass name="MfaSendOneTimePasswordData" package="org.openbravo.base.secureApp" accessModifier="public">
   <SqlClassComment></SqlClassComment>

   <SqlMethod name="getUsername" type="preparedStatement" return="String">
    <SqlMethodComment></SqlMethodComment>
    <Sql><![CDATA[
      select username from ad_user where ad_user_id = ?;
    ]]></Sql>
    <Parameter name="adUserId"/>
   </SqlMethod>

   <SqlMethod name="getUrl" type="preparedStatement" return="String">
    <SqlMethodComment></SqlMethodComment>
    <Sql><![CDATA[
      select url from ad_client where ad_client_id = ?;
    ]]></Sql>
    <Parameter name="adClientId"/>
   </SqlMethod>

   <SqlMethod name="getEmailSubject" type="preparedStatement" return="String">
    <SqlMethodComment></SqlMethodComment>
    <Sql><![CDATA[
      select ad_message_get('mfa_oneTimePasswordEmailSubject', COALESCE((select default_ad_language from ad_user where ad_user_id = ?),'en_US')) from dual;
    ]]></Sql>
    <Parameter name="adUserId"/>
   </SqlMethod>

   <SqlMethod name="getEmailBody" type="preparedStatement" return="String">
    <SqlMethodComment></SqlMethodComment>
    <Sql><![CDATA[
      select ad_message_get('mfa_oneTimePasswordEmailBody', COALESCE((select default_ad_language from ad_user where ad_user_id = ?),'en_US')) from dual;
    ]]></Sql>
    <Parameter name="adUserId"/>
   </SqlMethod>
   
   <SqlMethod name="getEmailBodyPWReset" type="preparedStatement" return="String">
    <SqlMethodComment></SqlMethodComment>
    <Sql><![CDATA[
      select ad_message_get('mfa_oneTimePasswordResetEmailBody', COALESCE((select default_ad_language from ad_user where ad_user_id = ?),'en_US')) from dual;
    ]]></Sql>
    <Parameter name="adUserId"/>
   </SqlMethod>

   <SqlMethod name="setOneTimePassword" type="preparedStatement" return="rowcount">
    <SqlMethodComment></SqlMethodComment>
    <Sql><![CDATA[
      update ad_user set mfa_onetimepassword = ?, mfa_code_timestamp = now(), updated = now(), updatedby = ? where ad_user_id = ?;
    ]]></Sql>
    <Parameter name="OTpassword"/>
    <Parameter name="updatedBy"/>
    <Parameter name="adUserId"/>
   </SqlMethod>
   
   <SqlMethod name="setOneTimePasswordEnteredManually" type="preparedStatement" return="rowcount">
    <SqlMethodComment>mfa_onetimepassword_entered_manually = Y, password was NOT autogenerated and sent via email</SqlMethodComment>
    <Sql><![CDATA[
      update ad_user set mfa_onetimepassword_entered_manually = 'Y', updated = now(), updatedby = ? where ad_user_id = ?;
    ]]></Sql>
    <Parameter name="updatedBy"/>
    <Parameter name="adUserId"/>
   </SqlMethod>
</SqlClass>
