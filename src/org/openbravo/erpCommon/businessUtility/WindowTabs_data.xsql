<?xml version="1.0" encoding="UTF-8" ?>
<!--
***************************************************************************************************************************************************
* The contents of this file are subject to the Openbravo  Public  License Version  1.0  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html. Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for the specific  language  governing  rights  and  limitations
* under the License. The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SL. Parts created by Openbravo are Copyright (C) 2001-2009 Openbravo SL
* All Rights Reserved.
* Contributor(s): Stefan Zimmermann, sz@zimmermann-software.de (SZ) Contributions are Copyright (C) 2011 Stefan Zimmermann
****************************************************************************************************************************************************

-->


<SqlClass name="WindowTabsData" package="org.openbravo.erpCommon.businessUtility" accessModifier="public">

  <SqlMethod name="select" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
      <Sql><![CDATA[
        select t.AD_Tab_ID, t.TabLevel, t.Name, coalesce(ti.name,coalesce(t_trl.name, t.name)) as tabname, t.seqno, 
        t.IsTranslationTab, t.isInfoTab, 'N' AS isBreadCrumb, ('tabname' || t.ad_tab_id) AS tabNameId,
        t.isActive, '' AS ID, '' AS Action
        from ad_tab t left join ad_tab_trl t_trl on t.ad_tab_id = t_trl.ad_tab_id
                              and t_trl.ad_language = ?
                      left join ad_tab_trl_instance ti   on t.ad_tab_id = ti.ad_tab_id
                              and ti.ad_language = ?
        where t.ad_window_id = ?
        order by t.seqno, t.tablevel
       ]]>
      </Sql>
      <Parameter name="adLanguage"/>
      <Parameter name="adLanguage"/>
      <Parameter name="adWindowId"/>
  </SqlMethod>
  <SqlMethod name="selectManual" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
      <Sql><![CDATA[
        select ? AS AD_Tab_ID, '0' AS TabLevel, m.Name, coalesce(ti.name,coalesce(m_trl.name, m.name)) as tabname, '10' AS seqno, 
        '' AS IsTranslationTab, '' AS isInfoTab, 'N' AS isBreadCrumb
        from ad_menu m left join ad_menu_trl m_trl on m.ad_menu_id = m_trl.ad_menu_id
                              and m_trl.ad_language = ?
                       left join ad_menu_trl_instance ti on m.ad_menu_id = ti.ad_menu_id
                              and ti.ad_language = ?
        where m.isactive = 'Y'
        and m.ad_menu_id = ?
       ]]>
      </Sql>
      <Parameter name="adTabId"/>
      <Parameter name="adLanguage"/>
      <Parameter name="adLanguage"/>
      <Parameter name="adMenuId"/>
  </SqlMethod>
  <SqlMethod name="selectManualwithoutMenu" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
      <Sql><![CDATA[
        select ? AS AD_Tab_ID, '0' AS TabLevel, f.Name, coalesce(ftrl.name, f.name) as tabname, '10' AS seqno, 
        '' AS IsTranslationTab, '' AS isInfoTab, 'N' AS isBreadCrumb
        from ad_form f left join ad_form_trl ftrl on f.ad_form_id = ftrl.ad_form_id
                              and ftrl.ad_language = ?
        where f.isactive = 'Y'
        and f.ad_form_id = ?
       ]]>
      </Sql>
      <Parameter name="adTabId"/>
      <Parameter name="adLanguage"/>
      <Parameter name="adTabId"/>
  </SqlMethod>
  <SqlMethod name="selectMenu" type="preparedStatement" return="String" default="">
    <SqlMethodComment></SqlMethodComment>
      <Sql><![CDATA[
        select AD_Parent_Menu_Element(m.AD_Menu_ID, m.AD_Client_ID, ?) AS NAME
        from ad_menu m 
        where m.ad_window_id = ?
        and m.isactive = 'Y'
        and m.action = 'W'
       ]]>
      </Sql>
      <Parameter name="adLanguage"/>
      <Parameter name="adWindowId"/>
  </SqlMethod>
  <SqlMethod name="selectMenuManual" type="preparedStatement" return="String" default="">
    <SqlMethodComment></SqlMethodComment>
      <Sql><![CDATA[
        select AD_Parent_Menu_Element(m.AD_Menu_ID, m.AD_Client_ID, ?) AS NAME
        from ad_menu m 
        where m.ad_menu_id = ?
       ]]>
      </Sql>
      <Parameter name="adLanguage"/>
      <Parameter name="adMenuId"/>
  </SqlMethod>
  <SqlMethod name="selectMenuInfo" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
      <Sql><![CDATA[
        select m.AD_Menu_ID AS ID, coalesce(ti.name,coalesce(mt.name, m.name)) as name 
        from AD_Menu m left join ad_menu_trl mt on m.ad_menu_id = mt.ad_menu_id 
                                                  and mt.ad_language = ?
                       left join ad_menu_trl_instance ti on m.ad_menu_id = ti.ad_menu_id 
                                                  and ti.ad_language = ?
        where (CASE m.action WHEN 'R' THEN 'P' 
                                  ELSE m.action END) = (CASE ? WHEN 'R' THEN 'P' ELSE ? END) 
        and (m.ad_window_ID = ? 
        or m.ad_process_ID = ? 
        or m.ad_form_ID = ? 
        or m.ad_task_ID = ? 
        or m.ad_workflow_ID = ? 
        )
       ]]>
      </Sql>
      <Parameter name="adLanguage"/>
      <Parameter name="adLanguage"/>
      <Parameter name="action"/>
      <Parameter name="action"/>
      <Parameter name="adTabId"/>
      <Parameter name="adTabId"/>
      <Parameter name="adTabId"/>
      <Parameter name="adTabId"/>
      <Parameter name="adTabId"/>
  </SqlMethod>
  <SqlMethod name="selectJavaInfo" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
      <Sql><![CDATA[
        select (CASE mo.Action WHEN 'F' THEN mo.AD_WorkFlow_ID 
                   WHEN 'X' THEN mo.AD_Form_ID
                   WHEN 'P' THEN mo.AD_Process_ID
                   WHEN 'R' THEN mo.AD_Process_ID
                   WHEN 'C' THEN mo.AD_CallOut_ID
                   WHEN 'T' THEN mo.AD_Task_ID
                   WHEN 'S' THEN mo.AD_Reference_ID
                   ELSE mo.AD_Tab_ID END) AS AD_Tab_ID, 
        mom.MAPPINGNAME AS TabName, mo.action
        from ad_model_object mo, ad_model_object_mapping mom
        where mo.ad_model_object_id = mom.ad_model_object_id
        and mo.isActive = 'Y'
        and mom.isActive = 'Y' 
        and mom.isDefault = 'Y'
        and UPPER(mo.CLASSNAME) = UPPER(?)
       ]]>
      </Sql>
      <Parameter name="className"/>
  </SqlMethod>
  <SqlMethod name="selectProcessInfo" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
      <Sql><![CDATA[
        select ad_process_id as ad_tab_id, 'P' as action
          from ad_process
          where ad_process_ID = ?
       ]]>
      </Sql>
      <Parameter name="processId"/>
  </SqlMethod>
  
  <SqlMethod name="selectWindowInfo" type="preparedStatement" return="String">
    <SqlMethodComment></SqlMethodComment>
      <Sql><![CDATA[
        select coalesce(ti.name,coalesce(mt.name, m.name)) as name 
        from ad_menu m left join ad_menu_trl mt on m.ad_menu_id = mt.ad_menu_id 
                                                and mt.ad_language = ?
                       left join ad_menu_trl_instance ti on m.ad_menu_id = ti.ad_menu_id 
                                                and ti.ad_language = ?
        where m.ad_window_id = ? 
        and m.action = 'W' 
       ]]>
      </Sql>
      <Parameter name="adLanguage"/>
      <Parameter name="adLanguage"/>
      <Parameter name="adWindowId"/>
  </SqlMethod>
  <SqlMethod name="isModuleActive" type="preparedStatement" return="String">
    <SqlMethodComment></SqlMethodComment>
      <Sql><![CDATA[
        select m.isactive 
        from ad_module m, ad_tab t
        where t.ad_module_id=m.ad_module_id
        and t.ad_tab_id = ?
       ]]>
      </Sql>
      <Parameter name="adTabId"/>
  </SqlMethod>
  <SqlMethod name="isRoleActive" type="preparedStatement" return="String">
    <SqlMethodComment></SqlMethodComment>
      <Sql><![CDATA[
        select isactive from ad_role_tabaccess where ad_role_id = ? and ad_tab_id = ?
        union 
        select 'Y' as isactive from dual
        order by isactive  limit 1
       ]]>
      </Sql>
      <Parameter name="adRoleId"/>
      <Parameter name="adTabId"/>
  </SqlMethod>
  <SqlMethod name="isInstanceActive" type="preparedStatement" return="String">
    <SqlMethodComment></SqlMethodComment>
      <Sql><![CDATA[
        select isactive from ad_tab_instance where ad_tab_id = ?
        union 
        select 'Y' as isactive from dual
        order by isactive  limit 1
       ]]>
      </Sql>
      <Parameter name="adTabId"/>
  </SqlMethod>
</SqlClass>
