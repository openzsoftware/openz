<?xml version="1.0" encoding="UTF-8" ?>
<!--
 ***************************************************************************************************************************************************
* The contents of this file are subject to the Openbravo  Public  License Version  1.0  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html. Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for the specific  language  governing  rights  and  limitations
* under the License. The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SL. Parts created by Openbravo are Copyright (C) 2001-2009 Openbravo SL
* All Rights Reserved.
* Contributor(s): Stefan Zimmermann, sz@zimmermann-software.de (SZ) Contributions are Copyright (C) 2011 Stefan Zimmermann
****************************************************************************************************************************************************
-->





<SqlClass name="ReportGeneralLedgerJournalData" package="org.openbravo.erpCommon.ad_reports">
  <SqlClassComment></SqlClassComment>
  <SqlMethod name="select" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
    <![CDATA[
      SELECT zsse_groupcount(IDENTIFIER) as groupcounter,SCHEMA_ID, SCHEMA_NAME, IDENTIFIER, DATEACCT, zssi_strDate(DATEACCT,?) as curdate,VALUE, NAME,TEXT, ID, AD_TABLE_ID, DOCBASETYPE, SEQNO,TOTAL,DESCRIPTION,AMTACCTDR,AMTACCTCR,GROUPEDLINES
      FROM 
      (SELECT SCHEMA_ID, SCHEMA_NAME, IDENTIFIER, DATEACCT, VALUE, NAME,TEXT, ID, AD_TABLE_ID, DOCBASETYPE, SEQNO, '' AS TOTAL, '' AS DESCRIPTION,
      (CASE AMTACCTDR WHEN 0 THEN NULL ELSE AMTACCTDR END) AS AMTACCTDR, (CASE AMTACCTCR WHEN 0 THEN NULL ELSE AMTACCTCR END) AS AMTACCTCR, 
      '' AS GROUPEDLINES
      FROM 
      (SELECT F.C_ACCTSCHEMA_ID AS SCHEMA_ID, SC.NAME AS SCHEMA_NAME, to_char(max(F.UPDATED),'DDMMYYHH12MISS')||F.FACT_ACCT_GROUP_ID AS IDENTIFIER , F.DATEACCT,
      F.ACCTVALUE AS VALUE, substr(coalesce(trl.name,EV.NAME),1,40) AS NAME,F.DESCRIPTION as TEXT,F.RECORD_ID AS ID, F.AD_TABLE_ID, F.DOCBASETYPE,
      sum(F.AMTACCTDR) AS AMTACCTDR, sum(F.AMTACCTCR) AS AMTACCTCR, MIN(SEQNO) AS SEQNO
      FROM FACT_ACCT F, C_ACCTSCHEMA SC, c_elementvalue ev  left join c_elementvalue_trl trl on trl.C_ELEMENTVALUE_id=ev.C_ELEMENTVALUE_id and ad_language = ?
      WHERE F.AD_CLIENT_ID IN ('1')
      AND F.AD_ORG_ID IN('1')
      AND 1=1
      AND f.AD_ORG_ID IN('2')
      AND F.FactAcctType IN ('C','N','O','R')
      AND (? IS NULL OR (F.RECORD_ID2 IS NULL))
      AND f.C_ACCTSCHEMA_ID = SC.C_ACCTSCHEMA_ID and ev.c_elementvalue_id=f.account_id
      GROUP BY f.C_ACCTSCHEMA_ID, SC.NAME, F.AD_TABLE_ID, F.DATEACCT, F.ACCTDESCRIPTION, F.DESCRIPTION, F.ACCTVALUE, F.DOCBASETYPE, F.RECORD_ID, f.FACT_ACCT_id,
      F.FACT_ACCT_GROUP_ID, F.ACCOUNT_ID,ev.name,trl.name,
      (CASE F.AMTACCTDR WHEN 0 THEN (CASE SIGN(F.AMTACCTCR) WHEN -1 THEN 1 ELSE 2 END) ELSE (CASE SIGN(F.AMTACCTDR) WHEN -1 THEN 3 ELSE 4 END) END)) AA
      ORDER BY SCHEMA_NAME, DATEACCT, IDENTIFIER, SEQNO) A
      ]]></Sql>
    <Field name="rownum" value="count"/>
    <Parameter name="language"/>
    <Parameter name="language"/>
    <Parameter name="adUserClient" type="replace" optional="true" after="WHERE F.AD_CLIENT_ID IN (" text="'1'"/>
    <Parameter name="adUserOrg" type="replace" optional="true" after="AND F.AD_ORG_ID IN(" text="'1'"/>
    <Parameter name="parDateFrom" optional="true" after="AND 1=1"><![CDATA[ AND f.dateacct >= TO_DATE(?)]]></Parameter>
    <Parameter name="parDateTo" optional="true" after="AND 1=1"><![CDATA[ AND f.dateacct < TO_DATE(?)]]></Parameter>
    <Parameter name="docbasetype" optional="true" after="AND 1=1"><![CDATA[ AND f.DOCBASETYPE = ?]]></Parameter>
    <Parameter name="acctschema" optional="true" after="AND 1=1"><![CDATA[ AND f.C_ACCTSCHEMA_ID = ?]]></Parameter>
    <Parameter name="acctvalue" optional="true" after="AND 1=1"><![CDATA[ AND f.acctvalue like ?]]></Parameter>
    <Parameter name="orgFamily" type="replace" optional="true" after="AND f.AD_ORG_ID IN(" text="'2'"/>
    <Parameter name="checks" type="replace" optional="true" after="AND F.FactAcctType IN (" text="'C','N','O','R'"/>
    <Parameter name="hideMatched"/>
    <!--Parameter name="closing" optional="true" type="none" after="2=2" text=" AND F.FactAcctType = 'C'"/>
    <Parameter name="regularization" optional="true" type="none" after="2=2" text=" AND F.FactAcctType = 'R'"/>
    <Parameter name="opening" optional="true" type="none" after="2=2" text=" AND F.FactAcctType = 'O'"/-->
  </SqlMethod>
  <SqlMethod name="selectCountGroupedLines" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
    <![CDATA[
      SELECT COUNT(*) AS GROUPEDLINES, IDENTIFIER, SCHEMA_NAME, DATEACCT
      FROM
      (
        SELECT SCHEMA_ID, SCHEMA_NAME, IDENTIFIER, DATEACCT, VALUE, NAME, TEXT,ID, AD_TABLE_ID, DOCBASETYPE, SEQNO, '' AS TOTAL, '' AS DESCRIPTION,
        (CASE AMTACCTDR WHEN 0 THEN NULL ELSE AMTACCTDR END) AS AMTACCTDR, (CASE AMTACCTCR WHEN 0 THEN NULL ELSE AMTACCTCR END) AS AMTACCTCR
        FROM 
        (SELECT F.C_ACCTSCHEMA_ID AS SCHEMA_ID, SC.NAME AS SCHEMA_NAME, F.FACT_ACCT_GROUP_ID AS IDENTIFIER, F.DATEACCT,
        F.ACCTVALUE AS VALUE, substr(coalesce(trl.name,EV.NAME),1,40) AS NAME,F.DESCRIPTION as TEXT, F.RECORD_ID AS ID, F.AD_TABLE_ID, F.DOCBASETYPE,
        sum(F.AMTACCTDR) AS AMTACCTDR, sum(F.AMTACCTCR) AS AMTACCTCR, MIN(SEQNO) AS SEQNO
        FROM FACT_ACCT F, C_ACCTSCHEMA SC  , c_elementvalue ev  left join c_elementvalue_trl trl on trl.C_ELEMENTVALUE_id=ev.C_ELEMENTVALUE_id and ad_language = ?
        WHERE F.AD_CLIENT_ID IN ('1')
        AND F.AD_ORG_ID IN('1')
        AND 1=1
        AND f.AD_ORG_ID IN('2')
        AND F.FactAcctType IN ('C','N','O','R')
        AND (? IS NULL OR (F.RECORD_ID2 IS NULL))
        AND f.C_ACCTSCHEMA_ID = SC.C_ACCTSCHEMA_ID and ev.c_elementvalue_id=f.account_id
        GROUP BY f.C_ACCTSCHEMA_ID, SC.NAME, F.AD_TABLE_ID, F.DATEACCT, F.ACCTDESCRIPTION,F.DESCRIPTION, F.ACCTVALUE, F.DOCBASETYPE, F.RECORD_ID,  f.FACT_ACCT_id,
        F.FACT_ACCT_GROUP_ID, F.ACCOUNT_ID,ev.name,trl.name,
        (CASE F.AMTACCTDR WHEN 0 THEN (CASE SIGN(F.AMTACCTCR) WHEN -1 THEN 1 ELSE 2 END) ELSE (CASE SIGN(F.AMTACCTDR) WHEN -1 THEN 3 ELSE 4 END) END)) AA
        ORDER BY SCHEMA_NAME, DATEACCT, IDENTIFIER, SEQNO
      ) BB
      GROUP BY IDENTIFIER, SCHEMA_NAME, DATEACCT
      ORDER BY SCHEMA_NAME, DATEACCT, IDENTIFIER
      ]]></Sql>
    <Field name="rownum" value="count"/>
    <Parameter name="language"/>
    <Parameter name="adUserClient" type="replace" optional="true" after="WHERE F.AD_CLIENT_ID IN (" text="'1'"/>
    <Parameter name="adUserOrg" type="replace" optional="true" after="AND F.AD_ORG_ID IN(" text="'1'"/>
    <Parameter name="parDateFrom" optional="true" after="AND 1=1"><![CDATA[ AND f.dateacct >= TO_DATE(?)]]></Parameter>
    <Parameter name="parDateTo" optional="true" after="AND 1=1"><![CDATA[ AND f.dateacct < TO_DATE(?)]]></Parameter>
    <Parameter name="docbasetype" optional="true" after="AND 1=1"><![CDATA[ AND f.DOCBASETYPE = ?]]></Parameter>
    <Parameter name="acctschema" optional="true" after="AND 1=1"><![CDATA[ AND f.C_ACCTSCHEMA_ID = ?]]></Parameter>
    <Parameter name="acctvalue" optional="true" after="AND 1=1"><![CDATA[ AND f.acctvalue like ?]]></Parameter>
    <Parameter name="orgFamily" type="replace" optional="true" after="AND f.AD_ORG_ID IN(" text="'2'"/>
    <Parameter name="checks" type="replace" optional="true" after="AND F.FactAcctType IN (" text="'C','N','O','R'"/>
    <Parameter name="hideMatched"/>
    <!--Parameter name="closing" optional="true" type="none" after="2=2" text=" AND F.FactAcctType = 'C'"/>
    <Parameter name="regularization" optional="true" type="none" after="2=2" text=" AND F.FactAcctType = 'R'"/>
    <Parameter name="opening" optional="true" type="none" after="2=2" text=" AND F.FactAcctType = 'O'"/-->
  </SqlMethod>
  <SqlMethod name="selectCount" type="preparedStatement" return="string" default="0">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
    <![CDATA[
        SELECT COUNT(IDENTIFIER) AS TOTAL
        FROM (
        SELECT F.DATEACCT,to_char(max(F.UPDATED),'DDMMYYHH12MISS')||F.FACT_ACCT_GROUP_ID AS IDENTIFIER
        FROM FACT_ACCT F left join AD_TABLE T on F.AD_TABLE_ID = T.AD_TABLE_ID
                         left join AD_TAB TB  on T.AD_TABLE_ID = TB.AD_TABLE_ID
                         left join AD_COLUMN C on T.AD_TABLE_ID = C.AD_TABLE_ID 
                                              AND C.ISKEY = 'Y'  
                         left join AD_WINDOW W on TB.AD_WINDOW_ID = W.AD_WINDOW_ID
        WHERE F.AD_CLIENT_ID IN ('1')
        AND F.AD_ORG_ID IN('1')
        AND 1=1
        AND f.AD_ORG_ID IN('2')     
            AND F.FactAcctType IN ('C','N','O','R')
        AND (? IS NULL OR (F.RECORD_ID2 IS NULL))
        AND (CASE (SELECT MAX(ISSOTRX) FROM C_DOCTYPE D 
                    WHERE D.DOCBASETYPE = F.DOCBASETYPE) WHEN 'N' THEN COALESCE(T.PO_WINDOW_ID, T.AD_WINDOW_ID) ELSE T.AD_WINDOW_ID END) = W.AD_WINDOW_ID 
        GROUP BY F.DATEACCT, F.FACT_ACCT_GROUP_ID) AA
        WHERE (DATEACCT< TO_DATE(?) OR (DATEACCT=TO_DATE(?) AND IDENTIFIER < ?))
      ]]></Sql>
    <Parameter name="adUserClient" type="replace" optional="true" after="WHERE F.AD_CLIENT_ID IN (" text="'1'"/>
    <Parameter name="adUserOrg" type="replace" optional="true" after="AND F.AD_ORG_ID IN(" text="'1'"/>
    <Parameter name="parDateFrom" optional="true" after="AND 1=1"><![CDATA[ AND f.dateacct >= TO_DATE(?)]]></Parameter>
    <Parameter name="parDateTo" optional="true" after="AND 1=1"><![CDATA[ AND f.dateacct < TO_DATE(?)]]></Parameter>
    <Parameter name="docbasetype" optional="true" after="AND 1=1"><![CDATA[ AND f.DOCBASETYPE = ?]]></Parameter>
    <Parameter name="acctschema" optional="true" after="AND 1=1"><![CDATA[ AND f.C_ACCTSCHEMA_ID = ?]]></Parameter>
    <Parameter name="acctvalue" optional="true" after="AND 1=1"><![CDATA[ AND f.acctvalue like ?]]></Parameter>
    <Parameter name="orgFamily" type="replace" optional="true" after="AND f.AD_ORG_ID IN(" text="'2'"/>
    <Parameter name="checks" type="replace" optional="true" after="AND F.FactAcctType IN (" text="'C','N','O','R'"/>
    <Parameter name="hideMatched"/>
    <Parameter name="dateAcct"/>
    <Parameter name="dateAcct"/>
    <Parameter name="factAcctGroupId"/>
    <!--Parameter name="closing" optional="true" type="none" after="2=2" text=" AND F.FactAcctType = 'C'"/>
    <Parameter name="regularization" optional="true" type="none" after="2=2" text=" AND F.FactAcctType = 'R'"/>
    <Parameter name="opening" optional="true" type="none" after="2=2" text=" AND F.FactAcctType = 'O'"/-->
  </SqlMethod>
  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment></SqlMethodComment>
      <Sql></Sql>
    <Parameter name="rownum"/>      
  </SqlMethod>
  <SqlMethod name="selectDirect" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
    <![CDATA[
      SELECT zsse_groupcount(IDENTIFIER) as groupcounter,SCHEMA_ID, SCHEMA_NAME, IDENTIFIER, DATEACCT,zssi_strDate(DATEACCT,?) as curdate, VALUE, NAME,TEXT, ID, AD_TABLE_ID, DOCBASETYPE, SEQNO,TOTAL,DESCRIPTION,AMTACCTDR,AMTACCTCR
      FROM 
      (
      SELECT SCHEMA_ID, SCHEMA_NAME, IDENTIFIER, DATEACCT, VALUE, NAME,TEXT, ID, AD_TABLE_ID, DOCBASETYPE, SEQNO, '' AS TOTAL, '' AS DESCRIPTION,
      (CASE AMTACCTDR WHEN 0 THEN NULL ELSE AMTACCTDR END) AS AMTACCTDR, (CASE AMTACCTCR WHEN 0 THEN NULL ELSE AMTACCTCR END) AS AMTACCTCR
      FROM 
      (SELECT F.C_ACCTSCHEMA_ID AS SCHEMA_ID, SC.NAME AS SCHEMA_NAME, to_char(max(F.UPDATED),'DDMMYYHH12MISS')||F.FACT_ACCT_GROUP_ID AS IDENTIFIER, F.DATEACCT,
      F.ACCTVALUE AS VALUE, substr(coalesce(trl.name,EV.NAME),1,40) AS NAME,F.DESCRIPTION as TEXT,F.RECORD_ID AS ID, F.AD_TABLE_ID, F.DOCBASETYPE,
      sum(F.AMTACCTDR) AS AMTACCTDR, sum(F.AMTACCTCR) AS AMTACCTCR, MIN(SEQNO) AS SEQNO
      FROM FACT_ACCT F, C_ACCTSCHEMA SC , c_elementvalue ev  left join c_elementvalue_trl trl on trl.C_ELEMENTVALUE_id=ev.C_ELEMENTVALUE_id and ad_language = ?
      WHERE F.AD_CLIENT_ID IN ('1')
      AND F.AD_ORG_ID IN('1')
      AND 1=1
      AND f.C_ACCTSCHEMA_ID = SC.C_ACCTSCHEMA_ID and ev.c_elementvalue_id=f.account_id
      GROUP BY f.C_ACCTSCHEMA_ID, SC.NAME, F.AD_TABLE_ID, F.DATEACCT, F.ACCTDESCRIPTION,F.DESCRIPTION, F.ACCTVALUE, F.DOCBASETYPE, F.RECORD_ID,  f.FACT_ACCT_id,
      F.FACT_ACCT_GROUP_ID, F.ACCOUNT_ID,ev.name,trl.name,
      (CASE F.AMTACCTDR WHEN 0 THEN (CASE SIGN(F.AMTACCTCR) WHEN -1 THEN 1 ELSE 2 END) ELSE (CASE SIGN(F.AMTACCTDR) WHEN -1 THEN 3 ELSE 4 END) END)) AA
      ORDER BY SCHEMA_NAME, DATEACCT, IDENTIFIER, SEQNO) A
      ]]></Sql>
    <Field name="rownum" value="count"/>
    <Parameter name="language"/>
    <Parameter name="language"/>
    <Parameter name="adUserClient" type="replace" optional="true" after="WHERE F.AD_CLIENT_ID IN (" text="'1'"/>
    <Parameter name="adUserOrg" type="replace" optional="true" after="AND F.AD_ORG_ID IN(" text="'1'"/>
    <Parameter name="table" optional="true" after="AND 1=1"><![CDATA[ AND f.ad_table_Id = ?]]></Parameter>
    <Parameter name="record" optional="true" after="AND 1=1"><![CDATA[ AND f.record_Id = ?]]></Parameter>   
    <Parameter name="table" optional="true" after="AND 1=1"><![CDATA[ AND f.ad_table_ID = ?]]></Parameter>
    <Parameter name="record" optional="true" after="AND 1=1"><![CDATA[ AND f.record_ID = ?]]></Parameter>
  </SqlMethod>
  <SqlMethod name="selectCountDirect" type="preparedStatement" return="string" default="0">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
    <![CDATA[
        SELECT COUNT(IDENTIFIER) AS TOTAL
        FROM (
        SELECT F.DATEACCT, to_char(max(F.UPDATED),'DDMMYYHH12MISS')||F.FACT_ACCT_GROUP_ID AS IDENTIFIER
        FROM  AD_TABLE T left join AD_TAB TB on T.AD_TABLE_ID = TB.AD_TABLE_ID
                         left join AD_COLUMN C  on T.AD_TABLE_ID = C.AD_TABLE_ID 
                                               AND C.ISKEY = 'Y'
                         left join FACT_ACCT F on F.AD_TABLE_ID = T.AD_TABLE_ID
                         left join AD_WINDOW W on TB.AD_WINDOW_ID = W.AD_WINDOW_ID 
        WHERE F.AD_CLIENT_ID IN ('1')
        AND F.AD_ORG_ID IN('1')
        AND 1=1
        AND (CASE (SELECT MAX(ISSOTRX) FROM C_DOCTYPE D 
        WHERE D.DOCBASETYPE = F.DOCBASETYPE) WHEN 'N' THEN COALESCE(T.PO_WINDOW_ID, T.AD_WINDOW_ID) ELSE T.AD_WINDOW_ID END) = W.AD_WINDOW_ID 
        GROUP BY F.DATEACCT, F.FACT_ACCT_GROUP_ID) AA
        WHERE (DATEACCT< TO_DATE(?) OR (DATEACCT=to_date(?) AND IDENTIFIER < ?))
      ]]></Sql>
    <Parameter name="adUserClient" type="replace" optional="true" after="WHERE F.AD_CLIENT_ID IN (" text="'1'"/>
    <Parameter name="adUserOrg" type="replace" optional="true" after="AND F.AD_ORG_ID IN(" text="'1'"/>
    <Parameter name="table" optional="true" after="AND 1=1"><![CDATA[ AND f.ad_table_Id = ?]]></Parameter>
    <Parameter name="record" optional="true" after="AND 1=1"><![CDATA[ AND f.record_Id = ?]]></Parameter>
    <Parameter name="dateAcct"/>
    <Parameter name="dateAcct"/>
    <Parameter name="factAcctGroupId"/>
  </SqlMethod>
  <SqlMethod name="selectDirect2" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
    <![CDATA[
    SELECT zsse_groupcount(IDENTIFIER) as groupcounter,SCHEMA_ID, SCHEMA_NAME, IDENTIFIER, DATEACCT,zssi_strDate(DATEACCT,?) as curdate, VALUE, NAME,TEXT, ID, AD_TABLE_ID, DOCBASETYPE, SEQNO,TOTAL,DESCRIPTION,AMTACCTDR,AMTACCTCR
      FROM 
      (
      SELECT SCHEMA_ID, SCHEMA_NAME, IDENTIFIER, DATEACCT, VALUE, NAME,TEXT, ID, AD_TABLE_ID, DOCBASETYPE, SEQNO, '' AS TOTAL, '' AS DESCRIPTION,
      (CASE AMTACCTDR WHEN 0 THEN NULL ELSE AMTACCTDR END) AS AMTACCTDR, (CASE AMTACCTCR WHEN 0 THEN NULL ELSE AMTACCTCR END) AS AMTACCTCR
      FROM 
      (SELECT F.C_ACCTSCHEMA_ID AS SCHEMA_ID, SC.NAME AS SCHEMA_NAME, to_char(max(F.UPDATED),'DDMMYYHH12MISS')||F.FACT_ACCT_GROUP_ID AS IDENTIFIER, F.DATEACCT,
      F.ACCTVALUE AS VALUE, substr(coalesce(trl.name,EV.NAME),1,40) AS NAME,F.DESCRIPTION as TEXT,F.RECORD_ID AS ID, F.AD_TABLE_ID, F.DOCBASETYPE,
      sum(F.AMTACCTDR) AS AMTACCTDR, sum(F.AMTACCTCR) AS AMTACCTCR, MIN(SEQNO) AS SEQNO
      FROM FACT_ACCT F, C_ACCTSCHEMA SC , c_elementvalue ev  left join c_elementvalue_trl trl on trl.C_ELEMENTVALUE_id=ev.C_ELEMENTVALUE_id and ad_language = ?
      WHERE F.AD_CLIENT_ID IN ('1')
      AND F.AD_ORG_ID IN('1')
      AND f.C_ACCTSCHEMA_ID = SC.C_ACCTSCHEMA_ID and ev.c_elementvalue_id=f.account_id
      AND F.Fact_Acct_Group_ID = ?
      GROUP BY f.C_ACCTSCHEMA_ID, SC.NAME, F.AD_TABLE_ID, F.DATEACCT, F.ACCTDESCRIPTION,F.DESCRIPTION, F.ACCTVALUE, F.DOCBASETYPE, F.RECORD_ID,  f.FACT_ACCT_id,
      F.FACT_ACCT_GROUP_ID, F.ACCOUNT_ID,ev.name,trl.name,
      (CASE F.AMTACCTDR WHEN 0 THEN (CASE SIGN(F.AMTACCTCR) WHEN -1 THEN 1 ELSE 2 END) ELSE (CASE SIGN(F.AMTACCTDR) WHEN -1 THEN 3 ELSE 4 END) END)) AA
      ORDER BY SCHEMA_NAME, DATEACCT, IDENTIFIER, SEQNO) A
      ]]></Sql>
    <Field name="rownum" value="count"/>
    <Parameter name="language"/>
    <Parameter name="language"/>
    <Parameter name="adUserClient" type="replace" optional="true" after="WHERE F.AD_CLIENT_ID IN (" text="'1'"/>
    <Parameter name="adUserOrg" type="replace" optional="true" after="AND F.AD_ORG_ID IN(" text="'1'"/>
    <Parameter name="factAcctGroupId"/>
  </SqlMethod>
  <SqlMethod name="selectCountDirect2" type="preparedStatement" return="string" default="0">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
    <![CDATA[
        SELECT COUNT(IDENTIFIER) AS TOTAL
        FROM (
        SELECT F.DATEACCT, to_char(max(F.UPDATED),'DDMMYYHH12MISS')||F.FACT_ACCT_GROUP_ID AS IDENTIFIER
        FROM AD_TABLE T left join AD_TAB TB    on T.AD_TABLE_ID = TB.AD_TABLE_ID
                        left join AD_COLUMN C  on T.AD_TABLE_ID = C.AD_TABLE_ID
                                              AND C.ISKEY = 'Y'
                        left join FACT_ACCT F  on F.AD_TABLE_ID = T.AD_TABLE_ID 
                        left join AD_WINDOW W  on TB.AD_WINDOW_ID = W.AD_WINDOW_ID
        WHERE F.AD_CLIENT_ID IN ('1')
        AND F.AD_ORG_ID IN('1')
        AND 1=1
        and f.fact_acct_group_id = ?
        AND (CASE (SELECT MAX(ISSOTRX) FROM C_DOCTYPE D 
        WHERE D.DOCBASETYPE = F.DOCBASETYPE) WHEN 'N' THEN COALESCE(T.PO_WINDOW_ID, T.AD_WINDOW_ID) ELSE T.AD_WINDOW_ID END) = W.AD_WINDOW_ID 
        GROUP BY F.DATEACCT, F.FACT_ACCT_GROUP_ID) AA
        WHERE (DATEACCT< to_date(?) OR (DATEACCT=to_date(?) AND IDENTIFIER < ?))
      ]]></Sql>
    <Parameter name="adUserClient" type="replace" optional="true" after="WHERE F.AD_CLIENT_ID IN (" text="'1'"/>
    <Parameter name="adUserOrg" type="replace" optional="true" after="AND F.AD_ORG_ID IN(" text="'1'"/>
    <Parameter name="factAcctGroupId"/>
    <Parameter name="dateAcct"/>
    <Parameter name="dateAcct"/>
    <Parameter name="identifier"/>
  </SqlMethod>
  <SqlMethod name="selectCompany" type="preparedStatement" return="string" default="0">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
    <![CDATA[
        SELECT NAME
        FROM AD_ORG
        WHERE AD_ORG_ID = ?
      ]]></Sql>
    <Parameter name="adOrg"/>
  </SqlMethod>
  <SqlMethod name="selectStartFactNo" type="preparedStatement" return="string" default="0">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
    <![CDATA[
        SELECT count(distinct fact_acct_group_id)
        FROM FACT_ACCT
        WHERE AD_ORG_ID IN('2')
        AND dateacct <= to_date(?)-1
      ]]></Sql>
    <Parameter name="orgFamily" type="replace" optional="true" after="WHERE AD_ORG_ID IN(" text="'2'"/>
    <Parameter name="dateAcct"/>
  </SqlMethod>
</SqlClass>
