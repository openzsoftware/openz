<?xml version="1.0" encoding="UTF-8" ?>
<!--
 *************************************************************************
 * The contents of this file are subject to the Openbravo  Public  License
 * Version  1.0  (the  "License"),  being   the  Mozilla   Public  License
 * Version 1.1  with a permitted attribution clause; you may not  use this
 * file except in compliance with the License. You  may  obtain  a copy of
 * the License at http://www.openbravo.com/legal/license.html 
 * Software distributed under the License  is  distributed  on  an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 * License for the specific  language  governing  rights  and  limitations
 * under the License. 
 * The Original Code is Openbravo ERP. 
 * The Initial Developer of the Original Code is Openbravo SL
 * All portions are Copyright (C) 2001-2009 Openbravo SL
 * All Rights Reserved. 
 * Contributor(s):  ______________________________________.
 ************************************************************************
-->





<SqlClass name="ErrorTextParserData" package="org.openbravo.erpCommon.utility">
  <SqlMethod name="select" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      select constraint_name, constraint_type, table_name, 
      AD_DBA_USER_CONST_SEARCHCOND(constraint_name) AS search_condition 
      from user_constraints 
      where UPPER(constraint_name) = UPPER(?)
    </Sql>
    <Parameter name="constraintName"/>
    <Field name="columnname" value="void"/>
  </SqlMethod>

  <SqlMethod name="selectColumnName" type="preparedStatement" return="String">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      select coalesce(ad_element_trl.name, ad_element.name) as column_name
      from ad_element left join ad_element_trl on ad_element.ad_element_id = ad_element_trl.ad_element_id and ad_element_trl.ad_language = ?
      where upper(ad_element.columnname) = upper(?)
    </Sql>
    <Parameter name="language"/>
    <Parameter name="columnname"/>
  </SqlMethod>

  <SqlMethod name="selectColumnNamesForConstraint" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      select ? as columnname from dual
    </Sql>
    <Parameter name="sql" optional="true" type="replace" after="select " text="? as columnname from dual"/>
    <Parameter name="columnname"/>
  </SqlMethod>

</SqlClass>
