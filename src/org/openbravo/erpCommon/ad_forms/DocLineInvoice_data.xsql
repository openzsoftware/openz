<?xml version="1.0" encoding="UTF-8" ?>
<!--
 ******************************************************************************
 * The contents of this file are subject to the   Compiere License  Version 1.1
 * ("License"); You may not use this file except in compliance with the License
 * You may obtain a copy of the License at http://www.compiere.org/license.html
 * Software distributed under the License is distributed on an  "AS IS"  basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for
 * the specific language governing rights and limitations under the License.
 * The Original Code is                  Compiere  ERP & CRM  Business Solution
 * The Initial Developer of the Original Code is Jorg Janke  and ComPiere, Inc.
 * Portions created by Jorg Janke are Copyright (C) 1999-2001 Jorg Janke, parts
 * created by ComPiere are Copyright (C) ComPiere, Inc.;   All Rights Reserved.
 * Contributor(s): Openbravo SL
 * Contributions are Copyright (C) 2001-2009 Openbravo S.L.
 ******************************************************************************
-->





<SqlClass name="DocLineInvoiceData" package="org.openbravo.erpCommon.ad_forms">
  <SqlClassComment></SqlClassComment>
  <SqlMethod name="select" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT C_INVOICELINE.C_INVOICELINE_ID, C_INVOICELINE.AD_CLIENT_ID, COALESCE(C_INVOICELINE_ACCTDIMENSION.AD_ORG_ID,C_INVOICELINE.AD_ORG_ID) AS AD_ORG_ID,
          C_INVOICELINE.ISACTIVE, C_INVOICELINE.C_INVOICE_ID, C_INVOICELINE.C_ORDERLINE_ID, C_INVOICELINE.M_INOUTLINE_ID,
        C_INVOICELINE.LINE, C_INVOICELINE.DESCRIPTION, C_INVOICELINE.M_PRODUCT_ID, C_INVOICELINE.QTYINVOICED,
        C_INVOICELINE.PRICELIST, C_INVOICELINE.PRICEACTUAL, C_INVOICELINE.PRICELIMIT,
        COALESCE(C_INVOICELINE_ACCTDIMENSION.AMT, C_INVOICELINE.LINENETAMT) AS LINENETAMT,
        C_INVOICELINE.C_CHARGE_ID, C_INVOICELINE.CHARGEAMT, C_INVOICELINE.C_UOM_ID, '' as C_TAX_ID,
        C_INVOICELINE.S_RESOURCEASSIGNMENT_ID, C_INVOICELINE.TAXAMT, C_INVOICELINE.M_ATTRIBUTESETINSTANCE_ID,
        C_INVOICELINE.ISDESCRIPTION, C_INVOICELINE.QUANTITYORDER, C_INVOICELINE.M_PRODUCT_UOM_ID,
        C_INVOICELINE_ACCTDIMENSION.C_CAMPAIGN_ID, C_INVOICELINE.C_PROJECT_ID,C_INVOICELINE.A_ASSET_ID,
        C_INVOICELINE_ACCTDIMENSION.USER1_ID, C_INVOICELINE_ACCTDIMENSION.USER2_ID
        FROM C_INVOICELINE left join C_INVOICELINE_ACCTDIMENSION on C_INVOICELINE.C_INVOICELINE_ID = C_INVOICELINE_ACCTDIMENSION.C_INVOICELINE_ID
        WHERE C_INVOICE_ID = ?
        ORDER BY LINE
     ]]>
     </Sql>
     <Parameter name="C_Invoice_ID"/>
   </SqlMethod>
  <SqlMethod name="selectTotal" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT MAX(C_INVOICELINE.C_INVOICELINE_ID) AS C_INVOICELINE_ID, C_INVOICELINE.AD_CLIENT_ID,
        C_INVOICELINE.AD_ORG_ID, C_INVOICELINE.ISACTIVE, C_INVOICELINE.C_INVOICE_ID,
        MAX(C_INVOICELINE.C_ORDERLINE_ID) AS C_ORDERLINE_ID, MAX(C_INVOICELINE.M_INOUTLINE_ID) AS M_INOUTLINE_ID,
        MAX(C_INVOICELINE.LINE) AS LINE, MAX(C_INVOICELINE.DESCRIPTION) AS DESCRIPTION, C_INVOICELINE.M_PRODUCT_ID,
        SUM(C_INVOICELINE.QTYINVOICED) AS QTYINVOICED, C_INVOICELINE.PRICELIST, C_INVOICELINE.PRICEACTUAL,
        C_INVOICELINE.PRICELIMIT, SUM(COALESCE(C_INVOICELINE_ACCTDIMENSION.AMT, C_INVOICELINE.LINENETAMT)) AS LINENETAMT, MAX(C_INVOICELINE.C_CHARGE_ID) AS C_CHARGE_ID,
        SUM(C_INVOICELINE.CHARGEAMT) AS CHARGEAMT, C_INVOICELINE.C_UOM_ID, '' as C_TAX_ID,
        C_INVOICELINE.S_RESOURCEASSIGNMENT_ID, SUM(C_INVOICELINE.TAXAMT) AS TAXAMT,
        C_INVOICELINE.M_ATTRIBUTESETINSTANCE_ID,
        C_INVOICELINE.ISDESCRIPTION, SUM(C_INVOICELINE.QUANTITYORDER) AS QUANTITYORDER, C_INVOICELINE.M_PRODUCT_UOM_ID,
        C_INVOICELINE_ACCTDIMENSION.C_CAMPAIGN_ID, C_INVOICELINE.C_PROJECT_ID,C_INVOICELINE.A_ASSET_ID,
        C_INVOICELINE_ACCTDIMENSION.USER1_ID, C_INVOICELINE_ACCTDIMENSION.USER2_ID
        FROM C_INVOICELINE left join C_INVOICELINE_ACCTDIMENSION on C_INVOICELINE.C_INVOICELINE_ID = C_INVOICELINE_ACCTDIMENSION.C_INVOICELINE_ID
        WHERE  C_INVOICELINE.C_INVOICE_ID = ?
        GROUP BY C_INVOICELINE.AD_CLIENT_ID, C_INVOICELINE.AD_ORG_ID, C_INVOICELINE.ISACTIVE, C_INVOICELINE.C_INVOICE_ID,
        C_INVOICELINE.M_PRODUCT_ID,C_INVOICELINE.PRICELIST, C_INVOICELINE.PRICEACTUAL, C_INVOICELINE.PRICELIMIT,
        C_INVOICELINE.C_UOM_ID, C_INVOICELINE.C_TAX_ID, C_INVOICELINE.S_RESOURCEASSIGNMENT_ID,
        C_INVOICELINE.M_ATTRIBUTESETINSTANCE_ID,C_INVOICELINE.ISDESCRIPTION, C_INVOICELINE.M_PRODUCT_UOM_ID,
        C_INVOICELINE_ACCTDIMENSION.C_CAMPAIGN_ID, C_INVOICELINE.C_PROJECT_ID,C_INVOICELINE.A_ASSET_ID,
        C_INVOICELINE_ACCTDIMENSION.USER1_ID, C_INVOICELINE_ACCTDIMENSION.USER2_ID
        ORDER BY LINE
     ]]>
     </Sql>
     <Parameter name="C_Invoice_ID"/>
   </SqlMethod>
   <SqlMethod name="isGrossInvoice" type="preparedStatement" return="string">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT isgrossinvoice from c_invoice where c_invoice_id =? 
     ]]>
     </Sql>
     <Parameter name="C_Invoice_ID"/>
   </SqlMethod>
   <SqlMethod name="selectGross" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT c_invoicetax.c_invoicetax_id as C_INVOICELINE_ID, c_invoicetax.AD_CLIENT_ID,c_invoicetax.AD_ORG_ID,
          c_invoicetax.ISACTIVE, c_invoicetax.C_INVOICE_ID, '' as M_INOUTLINE_ID,
        c_invoicetax.LINE, (select description from c_invoiceline where c_invoice_id=C_INVOICEtax.c_invoice_id and c_tax_id=C_INVOICEtax.C_tax_id order by line limit 1) as DESCRIPTION, 
        '' as M_PRODUCT_ID, 0 as QTYINVOICED,C_TAX_ID,
        0 as PRICELIST, 0 as PRICEACTUAL, 0 as PRICELIMIT,
        c_invoicetax.taxbaseamt AS LINENETAMT,i.a_asset_id,i.c_project_id,
        'N' as ISDESCRIPTION
        FROM C_INVOICEtax, c_invoice i
        WHERE i.c_invoice_id=C_INVOICEtax.c_invoice_id and i.C_INVOICE_ID = ?
        ORDER BY LINE
     ]]>
     </Sql>
     <Parameter name="C_Invoice_ID"/>
   </SqlMethod>
   <SqlMethod name="getPAccountFromTax" type="preparedStatement" return="string">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT zsfi_GetPAccountFromTax('1',?,?) 
     ]]>
     </Sql>
     <Parameter name="C_tax_ID"/>
     <Parameter name="Org_ID"/>
   </SqlMethod>
   <SqlMethod name="getPExpenseAccountFromTaxandFirstProduct" type="preparedStatement" return="string">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT zsfi_GetPExpenseAccountFromInvTaxandFirstProduct(?,?,?) 
     ]]>
     </Sql>
     <Parameter name="C_invoice_ID"/>
     <Parameter name="C_tax_ID"/>
     <Parameter name="Org_ID"/>
   </SqlMethod>
  </SqlClass>
